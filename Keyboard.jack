// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var int keyval;
        
        let keyval = Memory.peek(24576);

        if (~(keyval = 0)) {
            return keyval;
        }
        else {return 0;}
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char c, key;

        while (key = 0) {
	        let key = Keyboard.keyPressed();
        }
        let c = key;
        while (~(key = 0)) {
            let key = Keyboard.keyPressed();
        }
        do Output.printChar(c);

        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var char c;
        var String str;

        let str = String.new(10);
        do Output.printString(message);
        let c = 0;

        while (~(c = 128)) {
            let c = Keyboard.readChar();
            if (c = 129) {
                do str.eraseLastChar();
            } else {
                if (~(c=128)) {
                    let str = str.appendChar(c);
                }
            }
        }
        return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var char c, key;
        var String str;
        var int num;

        let str = String.new(10);
        do Output.printString(message);
        let c = 0;

        while (~(c = 128)) {
            while (key = 0) {
                let key = Keyboard.keyPressed();
            }
            let c = key;
            if (c = 129) {
                do str.eraseLastChar();
                do Output.backSpace();
            } else {
                if ((c > 47) & (c < 58) | (c = 45)) {
                    do Output.printChar(c);
                    let str = str.appendChar(c);
                }
            }
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
            }
        }
        do Output.println();

        let num = str.intValue();

        return num;
    }
}
